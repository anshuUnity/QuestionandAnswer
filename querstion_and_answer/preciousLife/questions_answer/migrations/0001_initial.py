# Generated by Django 3.0.8 on 2020-08-30 18:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hitcount.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_description', models.TextField(verbose_name='answer_desc')),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('isBestAnswer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=264)),
                ('title', models.CharField(max_length=264, unique=True)),
                ('description', models.TextField()),
                ('published_date', models.DateTimeField()),
                ('image_first', models.ImageField(blank=True, null=True, upload_to='question_images')),
                ('image_second', models.ImageField(blank=True, null=True, upload_to='question_images')),
                ('image_third', models.ImageField(blank=True, null=True, upload_to='question_images')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Give the tags to the question', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_date'],
            },
            bases=(models.Model, hitcount.models.HitCountMixin),
        ),
        migrations.CreateModel(
            name='ReportQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_description', models.TextField(blank=True, max_length=264, null=True)),
                ('question_url', models.URLField(blank=True, null=True)),
                ('questions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions_answer.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_description', models.TextField(blank=True, max_length=264, null=True)),
                ('question_url', models.URLField(blank=True, null=True)),
                ('answers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions_answer.Answer')),
                ('questions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions_answer.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='questions',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions_answer.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
